{"version":3,"file":"main.modern.js","sources":["../src/TimeSpan.ts"],"sourcesContent":["const MSEC_PER_SECOND = 1000;\r\nconst MSEC_PER_MINUTE = 1000 * 60;\r\nconst MSEC_PER_HOUR = 1000 * 60 * 60;\r\nconst MSEC_PER_DAY = 1000 * 60 * 60 * 24;\r\n\r\nfunction formatTimespan(ts: TimeSpan, format: string): string {\r\n    let formatter = new Intl.NumberFormat(undefined, { minimumIntegerDigits: 2 })\r\n    const days = ts.days.toString()\r\n    const hours = formatter.format(ts.hours)\r\n    const minutes = formatter.format(ts.minutes)\r\n    const seconds = formatter.format(ts.seconds)\r\n    formatter = new Intl.NumberFormat(undefined, { minimumIntegerDigits: 3 })\r\n    const milliseconds = formatter.format(ts.milliseconds)\r\n\r\n\r\n    if (days === \"0\") {\r\n        format = format.replace(/D\\?[^DHMSs]/g, '')\r\n        if (hours === \"00\") {\r\n            format = format.replace(/HH\\?[^DHMSs]/g, '')\r\n            if (minutes === \"00\") {\r\n                format = format.replace(/MM\\?[^DHMSs]/g, '')\r\n                if (seconds === \"00\") {\r\n                    format = format.replace(/SS\\?[^DHMSs]/g, '')\r\n                    if (milliseconds === \"000\") {\r\n                        format = format.replace(/mmm\\?[^DHMSs]/g, '')\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    format = format.replace(/\\?/g, '')\r\n\r\n\r\n    return format.replace(/D/g, days).replace(/HH/g, hours).replace(/MM/g, minutes).replace(/SS/g, seconds).replace(/mmm/g, milliseconds)\r\n}\r\n\r\nfunction normalizeTimeSpan(ts: TimeSpan) {\r\n    while (ts.milliseconds > 999) {\r\n        ts._milliseconds -= 1000;\r\n        ts._seconds += 1\r\n    }\r\n    while (ts.seconds > 59) {\r\n        ts._seconds -= 60;\r\n        ts._minutes += 1\r\n    }\r\n    while (ts.minutes > 59) {\r\n        ts._minutes -= 60;\r\n        ts._hours += 1\r\n    }\r\n    while (ts.hours > 23) {\r\n        ts._hours -= 24;\r\n        ts._days += 1\r\n    }\r\n}\r\n\r\ninterface TimeSpanConstructorParameters {\r\n    days?: number,\r\n    hours?: number,\r\n    minutes?: number,\r\n    seconds?: number,\r\n    milliseconds?: number,\r\n}\r\n\r\nexport class TimeSpan {\r\n    _milliseconds: number = 0;\r\n    _seconds: number = 0;\r\n    _minutes: number = 0;\r\n    _hours: number = 0;\r\n    _days: number = 0;\r\n\r\n    _format = \"D?.HH?:MM?:SS?.mmm?\"\r\n\r\n    constructor(parameters: TimeSpanConstructorParameters) {\r\n        if (parameters.days) {\r\n            this._days = parameters.days;\r\n        }\r\n        if (parameters.hours) {\r\n            this._hours = parameters.hours;\r\n        }\r\n        if (parameters.minutes) {\r\n            this._minutes = parameters.minutes;\r\n        }\r\n        if (parameters.seconds) {\r\n            this._seconds = parameters.seconds;\r\n        }\r\n        if (parameters.milliseconds) {\r\n            this._milliseconds = parameters.milliseconds;\r\n        }\r\n\r\n        normalizeTimeSpan(this);\r\n    }\r\n\r\n    static fromSeconds(seconds: number) {\r\n        return new TimeSpan({ seconds });\r\n    }\r\n    static fromMinutes(minutes: number) {\r\n        return new TimeSpan({ minutes });\r\n    }\r\n    static fromHours(hours: number) {\r\n        return new TimeSpan({ hours });\r\n    }\r\n    static fromDays(days: number) {\r\n        return new TimeSpan({ days });\r\n    }\r\n\r\n    add(timespan: TimeSpan) {\r\n        return new TimeSpan({ milliseconds: this.totalMilliseconds + timespan.totalMilliseconds })\r\n    }\r\n    subtract(timespan: TimeSpan) {\r\n        return new TimeSpan({ milliseconds: this.totalMilliseconds - timespan.totalMilliseconds })\r\n    }\r\n    duration() {\r\n        return new TimeSpan({ milliseconds: Math.abs(this.totalMilliseconds) })\r\n    }\r\n\r\n    addMilliseconds(milliseconds: number) {\r\n        this._milliseconds += milliseconds\r\n        normalizeTimeSpan(this);\r\n        return this;\r\n    }\r\n    subtractMilliseconds(milliseconds: number) {\r\n        this._milliseconds -= milliseconds\r\n        normalizeTimeSpan(this);\r\n        return this;\r\n    }\r\n\r\n    addSeconds(seconds: number) {\r\n        this._seconds += seconds\r\n        normalizeTimeSpan(this);\r\n        return this;\r\n    }\r\n    subtractSeconds(seconds: number) {\r\n        this._seconds -= seconds\r\n        normalizeTimeSpan(this);\r\n        return this;\r\n    }\r\n\r\n    addMinutes(minutes: number) {\r\n        this._minutes += minutes\r\n        normalizeTimeSpan(this);\r\n        return this;\r\n    }\r\n    subtractMinutes(minutes: number) {\r\n        this._minutes -= minutes\r\n        normalizeTimeSpan(this);\r\n        return this;\r\n    }\r\n\r\n    addHours(hours: number) {\r\n        this._hours += hours\r\n        normalizeTimeSpan(this);\r\n        return this;\r\n    }\r\n    subtractHours(hours: number) {\r\n        this._hours -= hours\r\n        normalizeTimeSpan(this);\r\n        return this;\r\n    }\r\n\r\n    addDays(days: number) {\r\n        this._days += days\r\n        normalizeTimeSpan(this);\r\n        return this;\r\n    }\r\n    subtractDays(days: number) {\r\n        this._days -= days\r\n        normalizeTimeSpan(this);\r\n        return this;\r\n    }\r\n\r\n\r\n    get milliseconds() {\r\n        return this._milliseconds;\r\n    }\r\n    get seconds() {\r\n        return this._seconds;\r\n    }\r\n    get minutes() {\r\n        return this._minutes;\r\n    }\r\n    get hours() {\r\n        return this._hours;\r\n    }\r\n    get days() {\r\n        return this._days;\r\n    }\r\n\r\n    get totalMilliseconds() {\r\n        const milliseconds = this._milliseconds;\r\n        const seconds_ms = this._seconds * MSEC_PER_SECOND;\r\n        const minutes_ms = this._minutes * MSEC_PER_MINUTE;\r\n        const hours_ms = this._hours * MSEC_PER_HOUR;\r\n        const days_ms = this._days * MSEC_PER_DAY;\r\n        return milliseconds + seconds_ms + minutes_ms + hours_ms + days_ms\r\n    }\r\n    get totalSeconds() {\r\n        return Math.floor(this.totalMilliseconds / MSEC_PER_SECOND);\r\n    }\r\n    get totalMinutes() {\r\n        return Math.floor(this.totalMilliseconds / MSEC_PER_MINUTE);\r\n    }\r\n    get totalHours() {\r\n        return Math.floor(this.totalMilliseconds / MSEC_PER_HOUR);\r\n    }\r\n    get totalDays() {\r\n        return Math.floor(this.totalMilliseconds / MSEC_PER_DAY);\r\n    }\r\n\r\n    equals(compare: TimeSpan) {\r\n        return compare.totalMilliseconds === this.totalMilliseconds;\r\n    }\r\n    lesser(compare: TimeSpan) {\r\n        return this.totalMilliseconds < compare.totalMilliseconds;\r\n    }\r\n    lesserEqual(compare: TimeSpan) {\r\n        return this.totalMilliseconds <= compare.totalMilliseconds;\r\n    }\r\n    greater(compare: TimeSpan) {\r\n        return this.totalMilliseconds > compare.totalMilliseconds;\r\n    }\r\n    greaterEqual(compare: TimeSpan) {\r\n        return this.totalMilliseconds >= compare.totalMilliseconds;\r\n    }\r\n    compareTo(compare: TimeSpan) {\r\n        return this.totalMilliseconds - compare.totalMilliseconds;\r\n    }\r\n\r\n    set formatter(value: string) {\r\n        this._format = value\r\n    }\r\n    format(format: string): string {\r\n        return formatTimespan(this, format)\r\n    }\r\n}\r\n\r\nTimeSpan.prototype.toString = function () {\r\n    return formatTimespan(this, this._format)\r\n}\r\n"],"names":["formatTimespan","ts","format","formatter","Intl","NumberFormat","undefined","minimumIntegerDigits","days","toString","hours","minutes","seconds","milliseconds","replace","normalizeTimeSpan","_milliseconds","_seconds","_minutes","_hours","_days","TimeSpan","constructor","parameters","_format","this","[object Object]","add","timespan","totalMilliseconds","subtract","duration","Math","abs","addMilliseconds","subtractMilliseconds","addSeconds","subtractSeconds","addMinutes","subtractMinutes","addHours","subtractHours","addDays","subtractDays","totalSeconds","floor","totalMinutes","totalHours","totalDays","equals","compare","lesser","lesserEqual","greater","greaterEqual","compareTo","value","prototype"],"mappings":"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"}